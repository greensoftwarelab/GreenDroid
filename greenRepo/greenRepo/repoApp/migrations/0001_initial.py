# Generated by Django 2.0.4 on 2018-04-30 16:29

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import enumfields.fields
import repoApp.models.metricsRelated
import repoApp.models.testRelated


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppBuildTool',
            fields=[
                ('build_id', models.CharField(max_length=70, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='AppHasMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AppHasPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('app_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('app_location', models.FilePathField()),
                ('app_description', models.CharField(max_length=100)),
                ('app_language', models.CharField(max_length=20)),
                ('app_version', models.FloatField()),
                ('app_build_tool', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='has_type', to='repoApp.AppBuildTool')),
            ],
        ),
        migrations.CreateModel(
            name='AppMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('am_value', models.FloatField()),
                ('am_unit', models.CharField(max_length=10)),
                ('am_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('am_app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aapp', to='repoApp.Application')),
            ],
        ),
        migrations.CreateModel(
            name='AppPermission',
            fields=[
                ('name', models.CharField(max_length=70, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('device_serial_number', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('device_brand', models.CharField(max_length=20)),
                ('device_model', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceState',
            fields=[
                ('device_state_id', models.AutoField(primary_key=True, serialize=False)),
                ('device_state_mem', models.IntegerField()),
                ('device_state_cpu_free', models.IntegerField()),
                ('device_state_nr_processes_running', models.IntegerField()),
                ('device_state_api_level', models.IntegerField()),
                ('device_state_android_version', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('method_id', models.CharField(max_length=300, primary_key=True, serialize=False)),
                ('method_name', models.CharField(max_length=256)),
                ('method_class', models.CharField(max_length=128)),
                ('method_hash_args', models.CharField(default='', max_length=34)),
            ],
        ),
        migrations.CreateModel(
            name='MethodInvoked',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='method', to='repoApp.Method')),
            ],
        ),
        migrations.CreateModel(
            name='MethodMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mm_value', models.FloatField()),
                ('mm_unit', models.CharField(max_length=10)),
                ('mm_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('mm_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mmmethod', to='repoApp.Method')),
            ],
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('metric_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('metric_type', enumfields.fields.EnumField(enum=repoApp.models.metricsRelated.MetricType, max_length=1)),
                ('metric_category', enumfields.fields.EnumField(default='o', enum=repoApp.models.metricsRelated.MetricCategory, max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Profiler',
            fields=[
                ('profiler_name', models.CharField(max_length=70, primary_key=True, serialize=False)),
                ('profiler_type', enumfields.fields.EnumField(enum=repoApp.models.testRelated.ProfilerType, max_length=1)),
                ('profiler_version', models.FloatField(default=1.0)),
            ],
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('study_title', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('study_authors', models.CharField(max_length=128)),
                ('study_publisher', models.CharField(max_length=64)),
                ('study_year', models.IntegerField()),
                ('study_isbn', models.CharField(max_length=64)),
                ('study_organization', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tested_app', to='repoApp.Application')),
            ],
        ),
        migrations.CreateModel(
            name='TestMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('unit', models.CharField(max_length=10)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metric', to='repoApp.Metric')),
            ],
        ),
        migrations.CreateModel(
            name='TestOrientation',
            fields=[
                ('test_orientation_designation', models.CharField(max_length=20, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='TestResults',
            fields=[
                ('test_results_id', models.AutoField(primary_key=True, serialize=False)),
                ('test_results_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('test_results_seed', models.IntegerField()),
                ('test_results_description', models.CharField(max_length=100)),
                ('test_results_device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testedOn', to='repoApp.Device')),
                ('test_results_device_begin_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='begin_state', to='repoApp.DeviceState')),
                ('test_results_device_end_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='end_state', to='repoApp.DeviceState')),
                ('test_results_profiler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profiledOn', to='repoApp.Profiler')),
                ('test_results_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test', to='repoApp.Test')),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('tool_name', models.CharField(max_length=70, primary_key=True, serialize=False)),
            ],
        ),
        migrations.AddField(
            model_name='testmetric',
            name='test_results',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='res', to='repoApp.TestResults'),
        ),
        migrations.AddField(
            model_name='test',
            name='test_orientation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_type', to='repoApp.TestOrientation'),
        ),
        migrations.AddField(
            model_name='test',
            name='test_tool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='used_tool', to='repoApp.Tool'),
        ),
        migrations.AddField(
            model_name='metric',
            name='metric_related_study',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accordingto', to='repoApp.Study'),
        ),
        migrations.AddField(
            model_name='methodmetric',
            name='mm_metric',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mmmethodHasMetric', to='repoApp.Metric'),
        ),
        migrations.AddField(
            model_name='methodinvoked',
            name='test_results',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='repoApp.TestResults'),
        ),
        migrations.AlterUniqueTogether(
            name='method',
            unique_together={('method_name', 'method_class', 'method_hash_args')},
        ),
        migrations.AddField(
            model_name='appmetric',
            name='am_metric',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ahasMetric', to='repoApp.Metric'),
        ),
        migrations.AddField(
            model_name='apphaspermission',
            name='application',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hasapp', to='repoApp.Application'),
        ),
        migrations.AddField(
            model_name='apphaspermission',
            name='permission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='haspermission', to='repoApp.AppPermission'),
        ),
        migrations.AddField(
            model_name='apphasmethod',
            name='application',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='belongstoapp', to='repoApp.Application'),
        ),
        migrations.AddField(
            model_name='apphasmethod',
            name='method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='methodname', to='repoApp.Method'),
        ),
        migrations.AlterUniqueTogether(
            name='testmetric',
            unique_together={('test_results', 'metric')},
        ),
        migrations.AlterUniqueTogether(
            name='test',
            unique_together={('test_application', 'test_tool', 'test_orientation')},
        ),
        migrations.AlterUniqueTogether(
            name='methodmetric',
            unique_together={('mm_method', 'mm_metric', 'mm_timestamp')},
        ),
        migrations.AlterUniqueTogether(
            name='methodinvoked',
            unique_together={('method', 'test_results')},
        ),
        migrations.AlterUniqueTogether(
            name='appmetric',
            unique_together={('am_app', 'am_metric', 'am_timestamp')},
        ),
        migrations.AlterUniqueTogether(
            name='apphaspermission',
            unique_together={('application', 'permission')},
        ),
        migrations.AlterUniqueTogether(
            name='apphasmethod',
            unique_together={('application', 'method')},
        ),
    ]
